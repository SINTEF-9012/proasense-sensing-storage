#
# Copyright (C) 2014-2015 SINTEF
#
#     Brian Elvesæter <brian.elvesater@sintef.no>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Kafka broker configuration properties
zookeeper.connect               = 192.168.1.111:2181
    # Nissatech (internal)      = 192.168.1.111:2181
    # Nissatech (public)        = 89.216.116.44:2181
    # MiniCloud (internal)      = 192.168.11.20:2181
    # Azure (internal)          = 100.79.244.186:2181
    # Azure (public)            = 191.238.106.229:2181
zookeeper.connection.timeout.ms = 1000000
bootstrap.servers               = 192.168.1.111:9092
    # Nissatech (internal)      = 192.168.1.111:9092
    # Nissatech (public)        = 89.216.116.44:9092
    # MiniCloud (internal)      = 192.168.11.41:9092
    # Azure (internal)          = 100.79.244.186:9092
    # Azure (public)            = 191.238.106.229:9092

# Kafka event generators configuration properties
proasense.benchmark.kafka.simple.generators         = 10
proasense.benchmark.kafka.simple.rate               = 20
proasense.benchmark.kafka.simple.messages           = 100000
proasense.benchmark.kafka.simple.topic              = eu.proasense.internal.sensing.mhwirth.simple
proasense.benchmark.kafka.simple.filter             = true
proasense.benchmark.kafka.derived.generators        = 2
proasense.benchmark.kafka.derived.rate              = 20
proasense.benchmark.kafka.derived.messages          = 100000
proasense.benchmark.kafka.derived.topic             = eu.proasense.internal.enricher.mhwirth.derived
proasense.benchmark.kafka.derived.filter            = false
proasense.benchmark.kafka.predicted.generators      = 1
proasense.benchmark.kafka.predicted.rate            = 1000
proasense.benchmark.kafka.predicted.messages        = 100
proasense.benchmark.kafka.predicted.topic           = eu.proasense.internal.oa.mhwirth.predicted
proasense.benchmark.kafka.predicted.filter          = false
proasense.benchmark.kafka.anomaly.generators        = 1
proasense.benchmark.kafka.anomaly.rate              = 1000
proasense.benchmark.kafka.anomaly.messages          = 100
proasense.benchmark.kafka.anomaly.topic             = eu.proasense.internal.oa.mhwirth.anomaly
proasense.benchmark.kafka.anomaly.filter            = false
proasense.benchmark.kafka.recommendation.generators = 1
proasense.benchmark.kafka.recommendation.rate       = 1000
proasense.benchmark.kafka.recommendation.messages   = 100
proasense.benchmark.kafka.recommendation.topic      = eu.proasense.internal.pandda.mhwirth.recommendation
proasense.benchmark.kafka.recommendation.filter     = false
proasense.benchmark.kafka.feedback.generators       = 1
proasense.benchmark.kafka.feedback.rate             = 1000
proasense.benchmark.kafka.feedback.messages         = 100
proasense.benchmark.kafka.feedback.topic            = eu.proasense.internal.bia.mhwirth.feedback
proasense.benchmark.kafka.feedback.filter           = false

# Local event generators configuration properties
proasense.benchmark.local.simple.generators         = 10
proasense.benchmark.local.simple.rate               = 20
proasense.benchmark.local.simple.messages           = 100000
proasense.benchmark.local.derived.generators        = 2
proasense.benchmark.local.derived.rate              = 20
proasense.benchmark.local.derived.messages          = 100000
proasense.benchmark.local.predicted.generators      = 1
proasense.benchmark.local.predicted.rate            = 1000
proasense.benchmark.local.predicted.messages        = 100
proasense.benchmark.local.anomaly.generators        = 1
proasense.benchmark.local.anomaly.rate              = 1000
proasense.benchmark.local.anomaly.messages          = 100
proasense.benchmark.local.recommendation.generators = 1
proasense.benchmark.local.recommendation.rate       = 1000
proasense.benchmark.local.recommendation.messages   = 100
proasense.benchmark.local.feedback.generators       = 1
proasense.benchmark.local.feedback.rate             = 1000
proasense.benchmark.local.feedback.messages         = 100

# MongoDB benchmark query configuration properties
proasense.benchmark.query.simple.starttime          = 1435066562846
proasense.benchmark.query.simple.endtime            = 1435066980951
proasense.benchmark.query.derived.starttime         = 1435066563093
proasense.benchmark.query.derived.endtime           = 1435066981435
proasense.benchmark.query.predicted.starttime       = 1435066564115
proasense.benchmark.query.predicted.endtime         = 1435066682184
proasense.benchmark.query.anomaly.starttime         = 1435066563930
proasense.benchmark.query.anomaly.endtime           = 1435066681180
proasense.benchmark.query.recommendation.starttime  = 1435066563985
proasense.benchmark.query.recommendation.endtime    = 1435066681185
proasense.benchmark.query.feedback.starttime        = 1435066563946
proasense.benchmark.query.feedback.endtime          = 1435066681180

# Benchmark common configuration properties
proasense.benchmark.common.logfile      = true

# Benchmark load testing configuration properties
proasense.benchmark.load.testing        = false
proasense.benchmark.load.sensors        = 1000
proasense.benchmark.load.rate           = 20
proasense.benchmark.load.messages       = 100000

# MongoDB event writers configuration properties
proasense.storage.mongodb.url           = mongodb://127.0.0.1:27017
    # default                           = mongodb://127.0.0.1:27017
    # Nissatech (public)                = mongodb://89.216.116.44:27017
    # MiniCloud (internal)              = mongodb://192.168.11.25:27017
    # Azure (public)                    = mongodb://191.239.216.49:27017
proasense.storage.mongodb.writers       = 1
proasense.storage.mongodb.bulksize      = 1000
proasense.storage.mongodb.maxwait       = 100
proasense.storage.mongodb.syncdriver    = true
